[{"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\timer\\timer.jsx":"1","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\clock.js":"2","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\reportWebVitals.js":"3","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\timerService.js":"4","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\soundBox.js":"5","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\common\\constants.js":"6","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\controller\\controller.jsx":"7","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\index.js":"8","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\header\\header.jsx":"9","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\setting_window\\settingWindow.jsx":"10","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\timer_wrapper\\timerWrapper.jsx":"11","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\clock\\clock.jsx":"12","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\setting_components\\settingComponent.jsx":"13","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\app.js":"14"},{"size":6059,"mtime":1609107603134,"results":"15","hashOfConfig":"16"},{"size":7342,"mtime":1609045744673,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1606428537994,"results":"18","hashOfConfig":"16"},{"size":2847,"mtime":1608962502429,"results":"19","hashOfConfig":"16"},{"size":590,"mtime":1609107661770,"results":"20","hashOfConfig":"16"},{"size":236,"mtime":1608855919680,"results":"21","hashOfConfig":"16"},{"size":2739,"mtime":1608887266613,"results":"22","hashOfConfig":"16"},{"size":672,"mtime":1608710395852,"results":"23","hashOfConfig":"16"},{"size":381,"mtime":1609036903850,"results":"24","hashOfConfig":"16"},{"size":3827,"mtime":1609363706561,"results":"25","hashOfConfig":"16"},{"size":1983,"mtime":1608945854203,"results":"26","hashOfConfig":"16"},{"size":255,"mtime":1608887245309,"results":"27","hashOfConfig":"16"},{"size":1137,"mtime":1608962471540,"results":"28","hashOfConfig":"16"},{"size":2156,"mtime":1608968618294,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"64ftn",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\timer\\timer.jsx",["62","63"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Clock from '../clock/clock';\r\nimport Controller from '../controller/controller';\r\nimport styles from './timer.module.css';\r\nimport Constants from '../../common/constants';\r\n\r\nconst constants = new Constants();\r\nconst timerStatusConstant = constants.getStatusConstants();\r\n\r\nconst Timer = (props) => {\r\n    const focusIndicatorRef = useRef();\r\n    const breakIndicatorRef = useRef();\r\n    const cycleIndicatorRef = useRef();\r\n\r\n    const [currentTime, setCurrentTime] = useState(props.service.getFormettedCurrentTime());\r\n    const [isClockRunning, setIsClockRunning] = useState(false);\r\n    const [retrievalInterval, setRetrievalInterval] = useState();\r\n    const [timerStatus, setTimerStatus] = useState();\r\n    const [currentCycle, setCurrentCycle] = useState(props.service.getCurrentCycle());\r\n    const [maxCycle, setMaxCycle] = useState(props.service.getMaxCycle());\r\n    const [isGoalCycleReached, setIsGoalCycleReached] = useState(props.isGoalCycleReached);\r\n\r\n    const switchIsClockRunning = (operationStatus) => {\r\n        if(operationStatus === undefined) {\r\n            isClockRunning ? setIsClockRunning(false) : setIsClockRunning(true);\r\n        } else {\r\n            operationStatus? setIsClockRunning(true) : setIsClockRunning(false);\r\n        }\r\n    }\r\n\r\n    const handleTimerRunningStatus = () => {\r\n        switchIsClockRunning();\r\n        isClockRunning ? props.service.stopTimer() : props.service.startTimer();\r\n    }\r\n\r\n    const handleResetButtonClicked = () => {\r\n        props.handleClickSound();\r\n        props.service.resetTimer();\r\n        switchIsClockRunning(false);\r\n        setCurrentTime(props.service.getFormettedCurrentTime());\r\n        setTimerStatus(timerStatusConstant.FOCUS);\r\n        switchStatusDisplay(timerStatusConstant.FOCUS);\r\n        updateCurrentCycle(1);\r\n    }\r\n\r\n    const switchStatusDisplay = (timerStatus) => {\r\n        if(timerStatus === timerStatusConstant.FOCUS) {\r\n            focusIndicatorRef.current.style.opacity = \"1\";\r\n            breakIndicatorRef.current.style.opacity = \"0.3\";\r\n\r\n        } else {\r\n            focusIndicatorRef.current.style.opacity = \"0.3\";\r\n            breakIndicatorRef.current.style.opacity = \"1\";\r\n        }\r\n    }  \r\n\r\n    const handleFastForward = () => {\r\n        props.service.fastForward(180);\r\n        setCurrentTime(props.service.getFormettedCurrentTime());\r\n        setIsGoalCycleReached(props.service.getIsGoalCycleReached());\r\n\r\n    }\r\n\r\n    const handleFastBackward = () => {\r\n        props.service.fastBackward(180);\r\n        setCurrentTime(props.service.getFormettedCurrentTime());\r\n        \r\n    }\r\n\r\n    const updateCurrentCycle = (cycleNum) => {\r\n        setCurrentCycle(cycleNum);\r\n        cycleIndicatorRef.current.innerHTML = `${cycleNum}/${props.maxCycleSetting}`;\r\n    }\r\n\r\n    const getCurrentStatus = () => {\r\n        const tempStatus = props.service.getCurrentStatus();\r\n        if(tempStatus === 'focus') {\r\n            return 'Focus';\r\n        } else if (tempStatus === 'break') {\r\n            return 'Break';\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setIsGoalCycleReached(props.isGoalCycleReached);\r\n    },[props.isGoalCycleReached])\r\n\r\n    useEffect(() => {\r\n        // Retrieve current time from the service\r\n        if(isClockRunning) {\r\n            setRetrievalInterval(\r\n                setInterval(() => {\r\n                    setCurrentTime(props.service.getFormettedCurrentTime());\r\n                }, 1000)\r\n            );\r\n        } else {\r\n            clearInterval(retrievalInterval);\r\n        }   \r\n    }, [isClockRunning]);\r\n\r\n    useEffect(() => {\r\n        document.title = `${props.service.getFormettedCurrentTime()} ${getCurrentStatus()} - Study Cycle `;\r\n        if(timerStatus !== props.service.getCurrentStatus()) {\r\n            setTimerStatus(props.service.getCurrentStatus());\r\n            switchStatusDisplay(props.service.getCurrentStatus());\r\n        }\r\n        const tempCurrentCycle = props.service.getCurrentCycle();\r\n        if(currentCycle !== tempCurrentCycle) {\r\n            updateCurrentCycle(tempCurrentCycle);\r\n        }\r\n        const tempGoalCycleReachedStatus = props.service.getIsGoalCycleReached();\r\n        if(isGoalCycleReached !== tempGoalCycleReachedStatus) {\r\n            setIsGoalCycleReached(tempGoalCycleReachedStatus);\r\n        }\r\n        // console.log(props.service.traceStatus())\r\n        setMaxCycle(props.maxCycleSetting);\r\n    }, [currentTime, maxCycle]);\r\n\r\n    return(\r\n    <div className={styles.timer}>\r\n        <div className={styles.indicators}>\r\n            <div ref={focusIndicatorRef} className={`${styles.indicator} ${styles.focusIndicator}`}>\r\n                <span>Focus</span>\r\n            </div>\r\n            <div className={styles.status}>\r\n                <div>\r\n                    <i className={`fas fa-biking ${styles.cycle_icon}`}></i>\r\n                    <span ref={cycleIndicatorRef} className={styles.cycle}>{`${currentCycle}/${props.maxCycleSetting}`}</span>\r\n                </div>\r\n            </div>\r\n            <div ref={breakIndicatorRef} className={`${styles.indicator} ${styles.breakIndicator}`}>\r\n                <span>Break</span>\r\n            </div>\r\n        </div>\r\n        <div className={styles.clock_display}>\r\n            <Clock className={styles.clock} formattedTime={currentTime}/>\r\n            <div className={styles.button} onClick={handleResetButtonClicked}>\r\n                <i className={`fas fa-redo-alt ${styles.reset_icon}`}></i>\r\n            </div>\r\n        </div>\r\n\r\n        <Controller\r\n            handleClickSound={props.handleClickSound}\r\n            service={props.service}\r\n            isClockRunning={isClockRunning}\r\n            handleTimerRunningStatus={handleTimerRunningStatus}\r\n            handleFastForward={handleFastForward}\r\n            handleFastBackward={handleFastBackward}\r\n            isGoalCycleReached={isGoalCycleReached}\r\n            handleResetButtonClicked={handleResetButtonClicked}/>\r\n    </div>\r\n)};\r\n\r\nexport default Timer;",["64","65"],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\clock.js",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\reportWebVitals.js",[],["66","67"],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\timerService.js",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\soundBox.js",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\common\\constants.js",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\controller\\controller.jsx",["68","69","70","71"],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\index.js",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\header\\header.jsx",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\setting_window\\settingWindow.jsx",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\timer_wrapper\\timerWrapper.jsx",["72","73"],"import React, { useState } from 'react';\r\nimport Timer from '../timer/timer';\r\nimport styles from './timerWrapper.module.css';\r\nimport Constants from '../../common/constants';\r\n\r\nconst constants = new Constants();\r\nconst status = constants.getStatusConstants();\r\n\r\nconst TimerWrapper = (props) => {\r\n    const handleSettingClick = () => {\r\n        props.handleSettingClick();\r\n    }    \r\n\r\n    const getFocusHMS = () => {\r\n        return {\r\n            hours: props.service.getFocusTimeHour(),\r\n            minutes: props.service.getFocusTimeMinute(),\r\n            seconds: props.service.getFocusTimeSecond()\r\n        }\r\n    }\r\n\r\n    const getBreakHMS = () => {\r\n        return {\r\n            hours: props.service.getBreakTimeHour(),\r\n            minutes: props.service.getBreakTimeMinute(),\r\n            seconds: props.service.getBreakTimeSecond()\r\n        }\r\n    }\r\n\r\n    return(\r\n    <div className={styles.wrapper}>\r\n        <div className={styles.settings}>\r\n            <span>\r\n                <div className={styles.small_description}>\r\n                    <span>Focus</span>\r\n                    </div>{getFocusHMS().hours} hr {getFocusHMS().minutes} min <div className={styles.small_description}><span>Break</span></div>{getBreakHMS().hours} hr {getBreakHMS().minutes} min <div className={styles.small_description}>\r\n                    <span>Cycles</span>\r\n                </div>\r\n                {props.service.getMaxCycle()}\r\n            </span>\r\n            <div className={styles.button} onClick={()=>{handleSettingClick(); props.handleClickSound();}}>\r\n                <i className={`fas fa-cog ${styles.icon}`} id=\"setting-icon\"></i>\r\n            </div>\r\n        </div>\r\n        <Timer \r\n            handleClickSound={props.handleClickSound}\r\n            service={props.service}\r\n            maxCycleSetting={props.maxCycleSetting}\r\n            isGoalCycleReached={props.isGoalCycleReached}\r\n            />\r\n    </div>\r\n    );     \r\n};\r\n\r\nexport default TimerWrapper;","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\clock\\clock.jsx",["74"],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\setting_components\\settingComponent.jsx",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\app.js",[],{"ruleId":"75","severity":1,"message":"76","line":100,"column":8,"nodeType":"77","endLine":100,"endColumn":24,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"79","line":118,"column":8,"nodeType":"77","endLine":118,"endColumn":31,"suggestions":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"85"},{"ruleId":"83","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":9,"nodeType":"89","messageId":"90","endLine":1,"endColumn":17},{"ruleId":"87","severity":1,"message":"91","line":1,"column":19,"nodeType":"89","messageId":"90","endLine":1,"endColumn":29},{"ruleId":"87","severity":1,"message":"92","line":1,"column":31,"nodeType":"89","messageId":"90","endLine":1,"endColumn":50},{"ruleId":"93","severity":1,"message":"94","line":42,"column":55,"nodeType":"95","messageId":"96","endLine":42,"endColumn":57},{"ruleId":"87","severity":1,"message":"88","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"97","line":7,"column":7,"nodeType":"89","messageId":"90","endLine":7,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.service' and 'retrievalInterval'. Either include them or remove the dependency array. If 'setCurrentTime' needs the current value of 'props.service', you can also switch to useReducer instead of useState and read 'props.service' in the reducer.","ArrayExpression",["98"],"React Hook useEffect has missing dependencies: 'currentCycle', 'getCurrentStatus', 'isGoalCycleReached', 'props.maxCycleSetting', 'props.service', 'timerStatus', and 'updateCurrentCycle'. Either include them or remove the dependency array. If 'setTimerStatus' needs the current value of 'props.service', you can also switch to useReducer instead of useState and read 'props.service' in the reducer.",["99"],"no-native-reassign",["100"],"no-negated-in-lhs",["101"],["100"],["101"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'forwardRef' is defined but never used.","'useImperativeHandle' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'status' is assigned a value but never used.",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [isClockRunning, props.service, retrievalInterval]",{"range":"106","text":"107"},"Update the dependencies array to be: [currentCycle, currentTime, getCurrentStatus, isGoalCycleReached, maxCycle, props.maxCycleSetting, props.service, timerStatus, updateCurrentCycle]",{"range":"108","text":"109"},[3616,3632],"[isClockRunning, props.service, retrievalInterval]",[4482,4505],"[currentCycle, currentTime, getCurrentStatus, isGoalCycleReached, maxCycle, props.maxCycleSetting, props.service, timerStatus, updateCurrentCycle]"]