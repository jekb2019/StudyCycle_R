[{"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\timer\\timer.jsx":"1","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\clock.js":"2","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\reportWebVitals.js":"3","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\timerService.js":"4","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\soundBox.js":"5","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\controller\\controller.jsx":"6","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\index.js":"7","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\header\\header.jsx":"8","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\setting_window\\settingWindow.jsx":"9","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\timer_wrapper\\timerWrapper.jsx":"10","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\clock\\clock.jsx":"11","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\setting_components\\settingComponent.jsx":"12","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\banner\\banner.jsx":"13","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\content_wrapper\\contentWrapper.jsx":"14","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\app.jsx":"15","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\enums\\TimerStatusType.js":"16","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\enums\\timerStatusType.js":"17","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\task_tracker_wrapper\\taskTrackerWrapper.jsx":"18","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\task_traker\\taskTracker.jsx":"19","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\task\\task.jsx":"20"},{"size":3320,"mtime":1610868880168,"results":"21","hashOfConfig":"22"},{"size":9931,"mtime":1610866153522,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1606428537994,"results":"24","hashOfConfig":"22"},{"size":2175,"mtime":1610778721740,"results":"25","hashOfConfig":"22"},{"size":768,"mtime":1610778686070,"results":"26","hashOfConfig":"22"},{"size":3652,"mtime":1610778176385,"results":"27","hashOfConfig":"22"},{"size":1092,"mtime":1610778805103,"results":"28","hashOfConfig":"22"},{"size":391,"mtime":1610772965805,"results":"29","hashOfConfig":"22"},{"size":5421,"mtime":1610795472157,"results":"30","hashOfConfig":"22"},{"size":2404,"mtime":1610797620247,"results":"31","hashOfConfig":"22"},{"size":246,"mtime":1610773861730,"results":"32","hashOfConfig":"22"},{"size":1295,"mtime":1610758749209,"results":"33","hashOfConfig":"22"},{"size":262,"mtime":1610773206096,"results":"34","hashOfConfig":"22"},{"size":8877,"mtime":1610867170317,"results":"35","hashOfConfig":"22"},{"size":1708,"mtime":1611039019852,"results":"36","hashOfConfig":"22"},{"size":146,"mtime":1610440441942,"results":"37","hashOfConfig":"22"},{"size":173,"mtime":1610778585106,"results":"38","hashOfConfig":"22"},{"size":2863,"mtime":1611015521223,"results":"39","hashOfConfig":"22"},{"size":1323,"mtime":1611015246971,"results":"40","hashOfConfig":"22"},{"size":3398,"mtime":1611018847172,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"64ftn",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\timer\\timer.jsx",[],["90","91"],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\clock.js",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\reportWebVitals.js",[],["92","93"],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\timerService.js",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\soundBox.js",[],["94","95"],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\controller\\controller.jsx",["96"],"import {useRef, memo} from 'react';\r\nimport styles from './controller.module.css';\r\n\r\nconst Controller = memo((props) => {\r\n    const primaryControllerRef = useRef();\r\n    \r\n    // DOM elements for primary controllers\r\n    const primaryControllers = [\r\n        {\r\n            name: 'pause',\r\n            element: <div id=\"pause\" key=\"pause\">\r\n                        <i className={`fas fa-pause ${styles.primary_controller} ${styles.controller}`}></i>\r\n                    </div>\r\n        },\r\n        {\r\n            name: 'play',\r\n            element: <div id=\"play\" key=\"play\">\r\n                        <i className={`fas fa-play ${styles.primary_controller} ${styles.controller}`}></i>\r\n                    </div>\r\n        },\r\n        {\r\n            name: 'reset',\r\n            element: <div id=\"reset\" key=\"reset\">\r\n                        <i className={`fas fa-redo-alt ${styles.primary_controller} ${styles.controller}`}></i>\r\n                    </div>\r\n        }\r\n    ];\r\n\r\n    const handlePrimaryControllerAction = () => {\r\n        props.soundBox.playClickSound();\r\n        const childId = primaryControllerRef.current.children[0].id;\r\n        switch(childId) {\r\n            case 'play':\r\n                props.handleStartTimer();\r\n                break;\r\n            case 'pause':\r\n                props.handlePauseTimer();\r\n                break;\r\n            case 'reset':\r\n                props.handleResetTimer();\r\n                break;\r\n            default:\r\n                console.log(\"Error loading Primary Controller\");\r\n        }\r\n    }\r\n\r\n    const handleFastForward = () => {\r\n        props.soundBox.playClickSound();\r\n        props.handleFastForward();\r\n    }\r\n\r\n    const handleFastBackward = () => {\r\n        props.soundBox.playClickSound();\r\n        props.handleFastBackward();\r\n    }\r\n\r\n    return (\r\n        <div className={styles.controllers}>\r\n            <div className={`${styles.fast_backward} ${styles.controller_wrapper}`}>\r\n                <div className={`${styles.button} ${styles.sub_controller_wrapper}`} onClick={handleFastBackward}>\r\n                    <i className={`fas fa-backward ${styles.sub_controller} ${styles.controller}`}></i>\r\n                </div>\r\n                <span className={styles.fastWindingDescription}>- 3 min</span>\r\n            </div>\r\n            <div ref={primaryControllerRef} className={`${styles.button} ${styles.controller_wrapper}`} onClick={handlePrimaryControllerAction}>\r\n                {\r\n                    primaryControllers.map((primaryController) => {\r\n                        if(props.isTimerRunning && primaryController.name === 'pause' && !props.isGoalCycleFinished) {\r\n                            return primaryController.element;\r\n                        } else if(!props.isTimerRunning && primaryController.name === 'play' && !props.isGoalCycleFinished) {\r\n                            return primaryController.element;\r\n                        } else if(props.isGoalCycleFinished && primaryController.name === 'reset') {\r\n                            return primaryController.element;\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n            <div className={`${styles.fast_forward} ${styles.controller_wrapper}`}>\r\n                <div className={`${styles.button} ${styles.sub_controller_wrapper}`} onClick={handleFastForward}>\r\n                    <i className={`fas fa-forward ${styles.sub_controller} ${styles.controller}`}></i>\r\n                </div>\r\n                <span className={styles.fastWindingDescription}>+ 3 min</span>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Controller;","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\index.js",[],["97","98"],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\header\\header.jsx",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\setting_window\\settingWindow.jsx",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\timer_wrapper\\timerWrapper.jsx",["99"],"import React, { useState } from 'react';\r\nimport Timer from '../timer/timer';\r\nimport styles from './timerWrapper.module.css';\r\n\r\n\r\nconst TimerWrapper = (props) => {\r\n    const handleStartTimer = () => {\r\n        props.handleStartTimer();\r\n    }\r\n\r\n    const handlePauseTimer = () => {\r\n        props.handlePauseTimer();\r\n    }\r\n\r\n    const handleSettingWindowToggle = () => {\r\n        props.soundBox.playClickSound();\r\n        props.handleSettingWindowToggle();\r\n    }\r\n\r\n    return(\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.settings}>\r\n                <span>\r\n                    <div className={styles.small_description}>\r\n                        <span>Focus</span>\r\n                    </div> \r\n                    <span className={styles.settedTime_indicator}> {props.focusTimeHours} hr {props.focusTimeMinutes} min</span> \r\n                    <div className={styles.small_description}>\r\n                        <span>Break</span>\r\n                    </div>\r\n                    <span className={styles.settedTime_indicator}> {props.breakTimeHours} hr {props.breakTimeMinutes} min</span> \r\n                    <div className={styles.small_description}>\r\n                        <span>Cycles</span>\r\n                    </div>\r\n                    <span className={styles.settedTime_indicator}> {props.goalCycle}</span>\r\n\r\n                </span>\r\n                <div className={styles.button} onClick={handleSettingWindowToggle}>\r\n                    <i className={`fas fa-cog ${styles.icon}`} id=\"setting-icon\"></i>\r\n                </div>\r\n            </div>\r\n            <Timer\r\n                soundBox={props.soundBox} \r\n                timerService={props.timerService}\r\n                handleStartTimer={handleStartTimer}\r\n                handlePauseTimer={handlePauseTimer}\r\n                isTimerRunning={props.isTimerRunning}\r\n                isGoalCycleFinished={props.isGoalCycleFinished}\r\n                handleResetTimer={props.handleResetTimer}\r\n                handleFastForward={props.handleFastForward}\r\n                handleFastBackward={props.handleFastBackward}\r\n                currentTime={props.currentTime}\r\n                currentTimerStatus={props.currentTimerStatus}\r\n                goalCycle={props.goalCycle}\r\n                currentCycle={props.currentCycle}/>\r\n        </div>\r\n    );     \r\n};\r\n\r\nexport default TimerWrapper;","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\clock\\clock.jsx",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\setting_components\\settingComponent.jsx",[],["100","101"],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\banner\\banner.jsx",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\content_wrapper\\contentWrapper.jsx",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\app.jsx",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\enums\\TimerStatusType.js",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\enums\\timerStatusType.js",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\task_tracker_wrapper\\taskTrackerWrapper.jsx",["102"],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\task_traker\\taskTracker.jsx",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\task\\task.jsx",["103"],"import React, { useRef, useState, useEffect } from 'react';\r\nimport styles from './task.module.css';\r\n\r\nconst Task = (props) => {\r\n    const [name, setName] = useState(props.task.name);\r\n    const [isEditEnabled, setIsEditEnabled] = useState(false);\r\n    const [isDone, setIsDone] = useState(props.task.isDone);\r\n\r\n    const checkboxRef = useRef();\r\n    const nameRef = useRef();\r\n    const editRef = useRef();\r\n\r\n    // Change edit button color when it is in edit mode\r\n    useEffect(() => {\r\n        isEditEnabled ? editRef.current.style.color = '#59B563' : editRef.current.style.color = null; \r\n    }, [isEditEnabled]);\r\n\r\n    useEffect(() => {\r\n        if(isDone) {\r\n            checkboxRef.current.checked = true;\r\n            props.setTaskIsDone(props.task.key, true);\r\n        } else {\r\n            checkboxRef.current.checked = false;\r\n            props.setTaskIsDone(props.task.key, false);\r\n        }\r\n    }, [isDone]);\r\n\r\n    const toggleCheckbox = () => {\r\n        if(checkboxRef.current.checked) {\r\n            checkboxRef.current.checked = false;\r\n            setIsDone(false);\r\n        } else {\r\n            checkboxRef.current.checked = true;\r\n            setIsDone(true);\r\n        }\r\n    }\r\n    const deleteTask = () => {\r\n        props.deleteTask(props.task.key);\r\n    }\r\n\r\n    const setEditMode = () => {\r\n        nameRef.current.readOnly = false;\r\n        setIsEditEnabled(true);\r\n        nameRef.current.focus();\r\n    }\r\n\r\n    const disableEditMode = () => {\r\n        nameRef.current.readOnly = true;\r\n        setIsEditEnabled(false);\r\n    }\r\n\r\n    const editName = (event) => {\r\n        if(isEditEnabled) {\r\n            disableEditMode();\r\n        } else {\r\n            setEditMode();\r\n        }\r\n    }\r\n    const handleOnInput = () => {\r\n        if(isEditEnabled) {\r\n            setName(nameRef.current.value);\r\n            changeTaskName(props.task.key, nameRef.current.value);\r\n        }\r\n    }\r\n    const handleOnBlur = (event) => {\r\n        console.log(event)\r\n        disableEditMode();\r\n    }\r\n    const handleOnKeyPressEnter = (event) => {\r\n        if(event.key === 'Enter') {\r\n            disableEditMode();\r\n        }\r\n    }\r\n    const changeTaskName = (key, name) => {\r\n        props.changeTaskName(key, name)\r\n    }\r\n    return (\r\n        <div className={styles.task_wrapper}>\r\n            <div className={styles.tick_and_subject}>\r\n                <div className={styles.checkbox_container}>\r\n                    <input ref={checkboxRef} onChange={() => {}} type=\"checkbox\" className={styles.checkbox}/>\r\n                    <span onClick={toggleCheckbox} className={styles.custom_checkbox}></span>\r\n                </div>\r\n                <input className={styles.name} ref={nameRef} type=\"text\" defaultValue={name} readOnly onInput={handleOnInput} onBlur={handleOnBlur} onKeyPress={handleOnKeyPressEnter}/>\r\n            </div>\r\n            <div className={styles.buttons}>\r\n                <div ref={editRef} className={`${styles.button} ${styles.edit_button}`} onMouseDown={(event) => {event.preventDefault()}} onClick={editName}>\r\n                    <i className=\"fas fa-edit\"></i>\r\n                </div>\r\n                <div className={`${styles.button} ${styles.trash_button}`} onClick={deleteTask}>\r\n                    <i className=\"fas fa-trash-alt\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ); \r\n};\r\n\r\nexport default Task;",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"104","replacedBy":"108"},{"ruleId":"106","replacedBy":"109"},{"ruleId":"104","replacedBy":"110"},{"ruleId":"106","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":67,"column":64,"nodeType":"114","messageId":"115","endLine":67,"endColumn":66},{"ruleId":"104","replacedBy":"116"},{"ruleId":"106","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"104","replacedBy":"122"},{"ruleId":"106","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":60,"column":8,"nodeType":"126","endLine":60,"endColumn":10,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"128","line":26,"column":8,"nodeType":"126","endLine":26,"endColumn":16,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],["130"],["131"],["130"],["131"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["130"],["131"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["130"],["131"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isTaskTrackerOpen'. Either include it or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [isTaskTrackerOpen]",{"range":"138","text":"139"},"Update the dependencies array to be: [isDone, props]",{"range":"140","text":"141"},[1630,1632],"[isTaskTrackerOpen]",[919,927],"[isDone, props]"]