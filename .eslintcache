[{"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\reportWebVitals.js":"1","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\App.js":"2","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\index.js":"3","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\app.js":"4","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\header\\header.jsx":"5","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\timer\\timer.jsx":"6","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\timer_wrapper\\timerWrapper.jsx":"7","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\banner\\banner.jsx":"8","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\clock\\clock.jsx":"9","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\controller\\controller.jsx":"10","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\setting_window\\settingWindow.jsx":"11","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\setting_components\\settingComponent.jsx":"12","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\timerService.js":"13","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\clock.js":"14","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\soundBox.js":"15","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\common\\constants.js":"16"},{"size":362,"mtime":1606428537994,"results":"17","hashOfConfig":"18"},{"size":123,"mtime":1607910380419,"results":"19","hashOfConfig":"18"},{"size":672,"mtime":1608710395852,"results":"20","hashOfConfig":"18"},{"size":2156,"mtime":1608968618294,"results":"21","hashOfConfig":"18"},{"size":381,"mtime":1609036903850,"results":"22","hashOfConfig":"18"},{"size":5826,"mtime":1609035630000,"results":"23","hashOfConfig":"18"},{"size":1983,"mtime":1608945854203,"results":"24","hashOfConfig":"18"},{"size":251,"mtime":1607913495331,"results":"25","hashOfConfig":"18"},{"size":255,"mtime":1608887245309,"results":"26","hashOfConfig":"18"},{"size":2739,"mtime":1608887266613,"results":"27","hashOfConfig":"18"},{"size":3650,"mtime":1609036923308,"results":"28","hashOfConfig":"18"},{"size":1137,"mtime":1608962471540,"results":"29","hashOfConfig":"18"},{"size":2847,"mtime":1608962502429,"results":"30","hashOfConfig":"18"},{"size":7374,"mtime":1608969205377,"results":"31","hashOfConfig":"18"},{"size":718,"mtime":1608967604184,"results":"32","hashOfConfig":"18"},{"size":236,"mtime":1608855919680,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"64ftn",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\reportWebVitals.js",[],["73","74"],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\App.js",["75"],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\index.js",[],["76","77"],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\app.js",[],["78","79"],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\header\\header.jsx",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\timer\\timer.jsx",["80","81"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Clock from '../clock/clock';\r\nimport Controller from '../controller/controller';\r\nimport styles from './timer.module.css';\r\nimport Constants from '../../common/constants';\r\n\r\nconst constants = new Constants();\r\nconst timerStatusConstant = constants.getStatusConstants();\r\n\r\nconst Timer = (props) => {\r\n    const focusIndicatorRef = useRef();\r\n    const breakIndicatorRef = useRef();\r\n    const cycleIndicatorRef = useRef();\r\n\r\n    const [currentTime, setCurrentTime] = useState(props.service.getFormettedCurrentTime());\r\n    const [isClockRunning, setIsClockRunning] = useState(false);\r\n    const [retrievalInterval, setRetrievalInterval] = useState();\r\n    const [timerStatus, setTimerStatus] = useState();\r\n    const [currentCycle, setCurrentCycle] = useState(props.service.getCurrentCycle());\r\n    const [maxCycle, setMaxCycle] = useState(props.service.getMaxCycle());\r\n    const [isGoalCycleReached, setIsGoalCycleReached] = useState(props.isGoalCycleReached);\r\n\r\n    const switchIsClockRunning = (operationStatus) => {\r\n        if(operationStatus === undefined) {\r\n            isClockRunning ? setIsClockRunning(false) : setIsClockRunning(true);\r\n        } else {\r\n            operationStatus? setIsClockRunning(true) : setIsClockRunning(false);\r\n        }\r\n    }\r\n\r\n    const handleTimerRunningStatus = () => {\r\n        switchIsClockRunning();\r\n        isClockRunning ? props.service.stopTimer() : props.service.startTimer();\r\n    }\r\n\r\n    const handleResetButtonClicked = () => {\r\n        props.handleClickSound();\r\n        props.service.resetTimer();\r\n        switchIsClockRunning(false);\r\n        setCurrentTime(props.service.getFormettedCurrentTime());\r\n        setTimerStatus(timerStatusConstant.FOCUS);\r\n        switchStatusDisplay(timerStatusConstant.FOCUS);\r\n        updateCurrentCycle(1);\r\n    }\r\n\r\n    const switchStatusDisplay = (timerStatus) => {\r\n        if(timerStatus === timerStatusConstant.FOCUS) {\r\n            focusIndicatorRef.current.style.opacity = \"1\";\r\n            breakIndicatorRef.current.style.opacity = \"0.3\";\r\n\r\n        } else {\r\n            focusIndicatorRef.current.style.opacity = \"0.3\";\r\n            breakIndicatorRef.current.style.opacity = \"1\";\r\n        }\r\n    }  \r\n\r\n    const handleFastForward = () => {\r\n        props.service.fastForward(180);\r\n        setCurrentTime(props.service.getFormettedCurrentTime());\r\n        setIsGoalCycleReached(props.service.getIsGoalCycleReached());\r\n\r\n    }\r\n\r\n    const handleFastBackward = () => {\r\n        props.service.fastBackward(180);\r\n        setCurrentTime(props.service.getFormettedCurrentTime());\r\n        \r\n    }\r\n\r\n    const updateCurrentCycle = (cycleNum) => {\r\n        setCurrentCycle(cycleNum);\r\n        cycleIndicatorRef.current.innerHTML = `${cycleNum}/${props.maxCycleSetting}`;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsGoalCycleReached(props.isGoalCycleReached);\r\n    },[props.isGoalCycleReached])\r\n\r\n    useEffect(() => {\r\n        // Retrieve current time from the service\r\n        if(isClockRunning) {\r\n            setRetrievalInterval(\r\n                setInterval(() => {\r\n                    setCurrentTime(props.service.getFormettedCurrentTime());\r\n                }, 1000)\r\n            );\r\n        } else {\r\n            clearInterval(retrievalInterval);\r\n        }   \r\n    }, [isClockRunning]);\r\n\r\n    useEffect(() => {\r\n        document.title = `Study Cycle \\u205f\\u205f ${props.service.getFormettedCurrentTime()}`; // change tab title to match the current time\r\n        if(timerStatus !== props.service.getCurrentStatus()) {\r\n            setTimerStatus(props.service.getCurrentStatus());\r\n            switchStatusDisplay(props.service.getCurrentStatus());\r\n        }\r\n        const tempCurrentCycle = props.service.getCurrentCycle();\r\n        if(currentCycle !== tempCurrentCycle) {\r\n            updateCurrentCycle(tempCurrentCycle);\r\n        }\r\n        const tempGoalCycleReachedStatus = props.service.getIsGoalCycleReached();\r\n        if(isGoalCycleReached !== tempGoalCycleReachedStatus) {\r\n            setIsGoalCycleReached(tempGoalCycleReachedStatus);\r\n        }\r\n        console.log(props.service.traceStatus())\r\n        setMaxCycle(props.maxCycleSetting);\r\n    }, [currentTime, maxCycle]);\r\n\r\n    return(\r\n    <div className={styles.timer}>\r\n        <div className={styles.indicators}>\r\n            <div ref={focusIndicatorRef} className={`${styles.indicator} ${styles.focusIndicator}`}>\r\n                <span>Focus</span>\r\n            </div>\r\n            <div className={styles.status}>\r\n                <div>\r\n                    <i className={`fas fa-biking ${styles.cycle_icon}`}></i>\r\n                    <span ref={cycleIndicatorRef} className={styles.cycle}>{`${currentCycle}/${props.maxCycleSetting}`}</span>\r\n                </div>\r\n            </div>\r\n            <div ref={breakIndicatorRef} className={`${styles.indicator} ${styles.breakIndicator}`}>\r\n                <span>Break</span>\r\n            </div>\r\n        </div>\r\n        <div className={styles.clock_display}>\r\n            <Clock className={styles.clock} formattedTime={currentTime}/>\r\n            <div className={styles.button} onClick={handleResetButtonClicked}>\r\n                <i className={`fas fa-redo-alt ${styles.reset_icon}`}></i>\r\n            </div>\r\n        </div>\r\n\r\n        <Controller\r\n            handleClickSound={props.handleClickSound}\r\n            service={props.service}\r\n            isClockRunning={isClockRunning}\r\n            handleTimerRunningStatus={handleTimerRunningStatus}\r\n            handleFastForward={handleFastForward}\r\n            handleFastBackward={handleFastBackward}\r\n            isGoalCycleReached={isGoalCycleReached}\r\n            handleResetButtonClicked={handleResetButtonClicked}/>\r\n    </div>\r\n)};\r\n\r\nexport default Timer;","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\timer_wrapper\\timerWrapper.jsx",["82","83"],"import React, { useState } from 'react';\r\nimport Timer from '../timer/timer';\r\nimport styles from './timerWrapper.module.css';\r\nimport Constants from '../../common/constants';\r\n\r\nconst constants = new Constants();\r\nconst status = constants.getStatusConstants();\r\n\r\nconst TimerWrapper = (props) => {\r\n    const handleSettingClick = () => {\r\n        props.handleSettingClick();\r\n    }    \r\n\r\n    const getFocusHMS = () => {\r\n        return {\r\n            hours: props.service.getFocusTimeHour(),\r\n            minutes: props.service.getFocusTimeMinute(),\r\n            seconds: props.service.getFocusTimeSecond()\r\n        }\r\n    }\r\n\r\n    const getBreakHMS = () => {\r\n        return {\r\n            hours: props.service.getBreakTimeHour(),\r\n            minutes: props.service.getBreakTimeMinute(),\r\n            seconds: props.service.getBreakTimeSecond()\r\n        }\r\n    }\r\n\r\n    return(\r\n    <div className={styles.wrapper}>\r\n        <div className={styles.settings}>\r\n            <span>\r\n                <div className={styles.small_description}>\r\n                    <span>Focus</span>\r\n                    </div>{getFocusHMS().hours} hr {getFocusHMS().minutes} min <div className={styles.small_description}><span>Break</span></div>{getBreakHMS().hours} hr {getBreakHMS().minutes} min <div className={styles.small_description}>\r\n                    <span>Cycles</span>\r\n                </div>\r\n                {props.service.getMaxCycle()}\r\n            </span>\r\n            <div className={styles.button} onClick={()=>{handleSettingClick(); props.handleClickSound();}}>\r\n                <i className={`fas fa-cog ${styles.icon}`} id=\"setting-icon\"></i>\r\n            </div>\r\n        </div>\r\n        <Timer \r\n            handleClickSound={props.handleClickSound}\r\n            service={props.service}\r\n            maxCycleSetting={props.maxCycleSetting}\r\n            isGoalCycleReached={props.isGoalCycleReached}\r\n            />\r\n    </div>\r\n    );     \r\n};\r\n\r\nexport default TimerWrapper;","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\banner\\banner.jsx",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\clock\\clock.jsx",["84"],"import React, { useState } from 'react';\r\nimport styles from './clock.module.css';\r\n\r\nconst Clock = (props) => {\r\n    return (\r\n    <div className={styles.clock}>\r\n       <span>{props.formattedTime}</span>    \r\n    </div>\r\n    )};\r\n\r\nexport default Clock;","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\controller\\controller.jsx",["85","86","87","88"],"import {useState, forwardRef, useImperativeHandle} from 'react';\r\nimport styles from './controller.module.css';\r\n\r\nconst Controller = (props) => {\r\n    const pauseButton = {\r\n        name: 'pause',\r\n        element: <div key=\"pause\">\r\n                    <i className={`fas fa-pause ${styles.primary_controller} ${styles.controller}`}></i>\r\n                </div>\r\n    }\r\n\r\n    const playButton = {\r\n        name: 'play',\r\n        element: <div key=\"play\">\r\n                    <i className={`fas fa-play ${styles.primary_controller} ${styles.controller}`}></i>\r\n                </div>\r\n    }\r\n\r\n    const resetButton = {\r\n        name: 'reset',\r\n        element: <div key=\"reset\" onClick={props.handleResetButtonClicked}>\r\n                    <i className={`fas fa-redo-alt ${styles.primary_controller} ${styles.controller}`}></i>\r\n                </div>\r\n    }\r\n\r\n    const primaryControllerArray = [pauseButton, playButton, resetButton];\r\n\r\n    return (\r\n        <div className={styles.controllers}>\r\n            <div className={styles.fast_backward}>\r\n                <div \r\n                className={`${styles.button} ${styles.sub_controller_wrapper}`} \r\n                onClick={() => {props.handleClickSound(); props.handleFastBackward();}}>\r\n                    <i className={`fas fa-backward ${styles.sub_controller} ${styles.controller}`}></i>\r\n                </div>\r\n                <span>- 3 min</span>\r\n            </div>\r\n            <div \r\n            className={styles.button} \r\n            onClick={() => {props.handleTimerRunningStatus(); props.handleClickSound();}}>\r\n                {\r\n                    primaryControllerArray.map((item) => {\r\n                        if(props.isGoalCycleReached && item.name === 'reset') {\r\n                            return item.element;\r\n                        }\r\n                        if(!props.isGoalCycleReached && props.isClockRunning && item.name === 'pause') {\r\n                            return item.element;\r\n                        } \r\n                        if(!props.isGoalCycleReached && !props.isClockRunning && item.name === 'play') {\r\n                            return item.element;\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n            <div className={styles.fast_forward}>\r\n                <div \r\n                className={`${styles.button} ${styles.sub_controller_wrapper}`}\r\n                onClick={() => {props.handleClickSound(); props.handleFastForward();}}>\r\n                    <i className={`fas fa-forward ${styles.sub_controller} ${styles.controller}`}></i>\r\n                </div>\r\n                <span>+ 3 min</span>\r\n            </div>\r\n        </div>\r\n    )};\r\n\r\nexport default Controller;","C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\setting_window\\settingWindow.jsx",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\components\\setting_components\\settingComponent.jsx",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\timerService.js",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\clock.js",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\service\\soundBox.js",[],"C:\\Users\\jason\\Desktop\\My_Programming\\Portfolio\\study_cycle_r\\src\\common\\constants.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":12},{"ruleId":"89","replacedBy":"97"},{"ruleId":"91","replacedBy":"98"},{"ruleId":"89","replacedBy":"99"},{"ruleId":"91","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":90,"column":8,"nodeType":"103","endLine":90,"endColumn":24,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"105","line":108,"column":8,"nodeType":"103","endLine":108,"endColumn":31,"suggestions":"106"},{"ruleId":"93","severity":1,"message":"107","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"108","line":7,"column":7,"nodeType":"95","messageId":"96","endLine":7,"endColumn":13},{"ruleId":"93","severity":1,"message":"107","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"107","line":1,"column":9,"nodeType":"95","messageId":"96","endLine":1,"endColumn":17},{"ruleId":"93","severity":1,"message":"109","line":1,"column":19,"nodeType":"95","messageId":"96","endLine":1,"endColumn":29},{"ruleId":"93","severity":1,"message":"110","line":1,"column":31,"nodeType":"95","messageId":"96","endLine":1,"endColumn":50},{"ruleId":"111","severity":1,"message":"112","line":42,"column":55,"nodeType":"113","messageId":"114","endLine":42,"endColumn":57},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["115"],["116"],["115"],["116"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.service' and 'retrievalInterval'. Either include them or remove the dependency array. If 'setCurrentTime' needs the current value of 'props.service', you can also switch to useReducer instead of useState and read 'props.service' in the reducer.","ArrayExpression",["117"],"React Hook useEffect has missing dependencies: 'currentCycle', 'isGoalCycleReached', 'props.maxCycleSetting', 'props.service', 'timerStatus', and 'updateCurrentCycle'. Either include them or remove the dependency array. If 'setTimerStatus' needs the current value of 'props.service', you can also switch to useReducer instead of useState and read 'props.service' in the reducer.",["118"],"'useState' is defined but never used.","'status' is assigned a value but never used.","'forwardRef' is defined but never used.","'useImperativeHandle' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [isClockRunning, props.service, retrievalInterval]",{"range":"123","text":"124"},"Update the dependencies array to be: [currentCycle, currentTime, isGoalCycleReached, maxCycle, props.maxCycleSetting, props.service, timerStatus, updateCurrentCycle]",{"range":"125","text":"126"},[3352,3368],"[isClockRunning, props.service, retrievalInterval]",[4249,4272],"[currentCycle, currentTime, isGoalCycleReached, maxCycle, props.maxCycleSetting, props.service, timerStatus, updateCurrentCycle]"]